// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentRegistration.Shared.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ClassSection")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Classroom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("DaysOfWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("EnrolledCount")
                        .HasColumnType("int");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ClassId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("CourseId", "ClassSection")
                        .IsUnique();

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-101",
                            CourseId = 1,
                            DaysOfWeek = "S",
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            EnrolledCount = 29,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 2,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-102",
                            CourseId = 1,
                            DaysOfWeek = "T",
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 2,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 3,
                            Capacity = 25,
                            ClassSection = "A",
                            Classroom = "ENG-201",
                            CourseId = 2,
                            DaysOfWeek = "W",
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            EnrolledCount = 22,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 8,
                            Capacity = 25,
                            ClassSection = "B",
                            Classroom = "ENG-201",
                            CourseId = 2,
                            DaysOfWeek = "U",
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            EnrolledCount = 24,
                            InstructorId = 2,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 4,
                            Capacity = 40,
                            ClassSection = "A",
                            Classroom = "SCI-105",
                            CourseId = 3,
                            DaysOfWeek = "M",
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            EnrolledCount = 38,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 9,
                            Capacity = 40,
                            ClassSection = "B",
                            Classroom = "SCI-105",
                            CourseId = 3,
                            DaysOfWeek = "T",
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EnrolledCount = 39,
                            InstructorId = 3,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 10,
                            Capacity = 40,
                            ClassSection = "A",
                            Classroom = "SCI-105",
                            CourseId = 4,
                            DaysOfWeek = "H",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            EnrolledCount = 38,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 11,
                            Capacity = 40,
                            ClassSection = "B",
                            Classroom = "SCI-105",
                            CourseId = 4,
                            DaysOfWeek = "U",
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            EnrolledCount = 38,
                            InstructorId = 4,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 5,
                            Capacity = 35,
                            ClassSection = "A",
                            Classroom = "ART-102",
                            CourseId = 5,
                            DaysOfWeek = "S",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 28,
                            InstructorId = 3,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 12,
                            Capacity = 40,
                            ClassSection = "B",
                            Classroom = "SCI-105",
                            CourseId = 5,
                            DaysOfWeek = "M",
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            EnrolledCount = 38,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 6,
                            Capacity = 50,
                            ClassSection = "A",
                            Classroom = "SCI-201",
                            CourseId = 6,
                            DaysOfWeek = "T",
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            EnrolledCount = 42,
                            InstructorId = 4,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 13,
                            Capacity = 50,
                            ClassSection = "B",
                            Classroom = "SCI-201",
                            CourseId = 6,
                            DaysOfWeek = "H",
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            EnrolledCount = 42,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 7,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 7,
                            DaysOfWeek = "S",
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 5,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 14,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 7,
                            DaysOfWeek = "W",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 15,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 8,
                            DaysOfWeek = "M",
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 3,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 16,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 8,
                            DaysOfWeek = "U",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 5,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 17,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 9,
                            DaysOfWeek = "T",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 3,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 18,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 9,
                            DaysOfWeek = "S",
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 5,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 19,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 10,
                            DaysOfWeek = "H",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            EnrolledCount = 29,
                            InstructorId = 1,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 20,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 10,
                            DaysOfWeek = "U",
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EnrolledCount = 29,
                            InstructorId = 5,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 21,
                            Capacity = 40,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 11,
                            DaysOfWeek = "W",
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EnrolledCount = 39,
                            InstructorId = 3,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 22,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 11,
                            DaysOfWeek = "M",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 28,
                            InstructorId = 2,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 23,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 12,
                            DaysOfWeek = "U",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 2,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 24,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 12,
                            DaysOfWeek = "H",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            EnrolledCount = 18,
                            InstructorId = 3,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 25,
                            Capacity = 30,
                            ClassSection = "A",
                            Classroom = "ENG-301",
                            CourseId = 13,
                            DaysOfWeek = "T",
                            EndTime = new TimeSpan(0, 14, 0, 0, 0),
                            EnrolledCount = 25,
                            InstructorId = 4,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            ClassId = 26,
                            Capacity = 30,
                            ClassSection = "B",
                            Classroom = "ENG-301",
                            CourseId = 13,
                            DaysOfWeek = "S",
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            EnrolledCount = 20,
                            InstructorId = 5,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("College")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CourseNumber")
                        .HasColumnType("int");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("DepartmentCode", "CourseNumber")
                        .IsUnique();

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            College = "Engineering",
                            CourseName = "Introduction to Programming",
                            CourseNumber = 101,
                            CreditHours = 3,
                            DepartmentCode = "CS",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 2,
                            College = "Engineering",
                            CourseName = "Data Structures",
                            CourseNumber = 201,
                            CreditHours = 3,
                            DepartmentCode = "CS",
                            Level = 200
                        },
                        new
                        {
                            CourseId = 3,
                            College = "Sciences",
                            CourseName = "Calculus I",
                            CourseNumber = 101,
                            CreditHours = 4,
                            DepartmentCode = "MATH",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 4,
                            College = "Engineering",
                            CourseName = "Database Systems",
                            CourseNumber = 301,
                            CreditHours = 3,
                            DepartmentCode = "CS",
                            Level = 300
                        },
                        new
                        {
                            CourseId = 5,
                            College = "Arts",
                            CourseName = "Composition I",
                            CourseNumber = 101,
                            CreditHours = 3,
                            DepartmentCode = "ENG",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 6,
                            College = "Sciences",
                            CourseName = "General Physics",
                            CourseNumber = 101,
                            CreditHours = 4,
                            DepartmentCode = "PHYS",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 7,
                            College = "Engineering",
                            CourseName = "Object-Oriented Programming",
                            CourseNumber = 202,
                            CreditHours = 3,
                            DepartmentCode = "CS",
                            Level = 200
                        },
                        new
                        {
                            CourseId = 8,
                            College = "Business",
                            CourseName = "Introduction to Management",
                            CourseNumber = 101,
                            CreditHours = 3,
                            DepartmentCode = "MGT",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 9,
                            College = "Business",
                            CourseName = "Organizational Behavior",
                            CourseNumber = 201,
                            CreditHours = 3,
                            DepartmentCode = "MGT",
                            Level = 200
                        },
                        new
                        {
                            CourseId = 10,
                            College = "Engineering",
                            CourseName = "Math For CS",
                            CourseNumber = 204,
                            CreditHours = 3,
                            DepartmentCode = "CS",
                            Level = 200
                        },
                        new
                        {
                            CourseId = 11,
                            College = "Engineering",
                            CourseName = "Introduction to Web Development",
                            CourseNumber = 105,
                            CreditHours = 3,
                            DepartmentCode = "CS",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 12,
                            College = "Engineering",
                            CourseName = "Introduction to Probability",
                            CourseNumber = 107,
                            CreditHours = 2,
                            DepartmentCode = "CS",
                            Level = 100
                        },
                        new
                        {
                            CourseId = 13,
                            College = "Engineering",
                            CourseName = "Software Engineering Theory",
                            CourseNumber = 205,
                            CreditHours = 2,
                            DepartmentCode = "CS",
                            Level = 200
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            Email = "mai_allam@alexu.edu.eg",
                            InstructorName = "Dr. Mai Allam"
                        },
                        new
                        {
                            InstructorId = 2,
                            Email = "n.ramzy@alexu.edu.eg",
                            InstructorName = "Prof. Noha Ramzy"
                        },
                        new
                        {
                            InstructorId = 3,
                            Email = "a.magdy@alexu.edu.eg",
                            InstructorName = "Dr. Ahmed Magdy"
                        },
                        new
                        {
                            InstructorId = 4,
                            Email = "ramysamy12@alexu.edu.eg",
                            InstructorName = "Prof. Ramy Samy"
                        },
                        new
                        {
                            InstructorId = 5,
                            Email = "sara_salama@alexu.edu.eg",
                            InstructorName = "Dr. Sara Salama"
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Prerequisite", b =>
                {
                    b.Property<int>("PrerequisiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrerequisiteId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredCourseId")
                        .HasColumnType("int");

                    b.HasKey("PrerequisiteId");

                    b.HasIndex("CourseId");

                    b.HasIndex("RequiredCourseId");

                    b.ToTable("Prerequisites");

                    b.HasData(
                        new
                        {
                            PrerequisiteId = 1,
                            CourseId = 2,
                            RequiredCourseId = 1
                        },
                        new
                        {
                            PrerequisiteId = 2,
                            CourseId = 4,
                            RequiredCourseId = 2
                        },
                        new
                        {
                            PrerequisiteId = 3,
                            CourseId = 7,
                            RequiredCourseId = 1
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StudentRegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentRegistrationNumber", "ClassId", "SemesterId")
                        .IsUnique();

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            RegistrationId = 1,
                            ClassId = 3,
                            RegistrationDate = new DateTime(2025, 10, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            SemesterId = 3,
                            Status = "Registered",
                            StudentRegistrationNumber = 20240001
                        },
                        new
                        {
                            RegistrationId = 2,
                            ClassId = 5,
                            RegistrationDate = new DateTime(2025, 10, 15, 10, 35, 0, 0, DateTimeKind.Unspecified),
                            SemesterId = 3,
                            Status = "Registered",
                            StudentRegistrationNumber = 20240001
                        },
                        new
                        {
                            RegistrationId = 3,
                            ClassId = 1,
                            RegistrationDate = new DateTime(2025, 10, 16, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            SemesterId = 3,
                            Status = "Registered",
                            StudentRegistrationNumber = 20240002
                        },
                        new
                        {
                            RegistrationId = 4,
                            ClassId = 3,
                            RegistrationDate = new DateTime(2025, 10, 16, 11, 20, 0, 0, DateTimeKind.Unspecified),
                            SemesterId = 3,
                            Status = "Registered",
                            StudentRegistrationNumber = 20240004
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistrationStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SemesterId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            AcademicYear = "2024-2025",
                            IsCurrent = false,
                            RegistrationEnd = new DateTime(2024, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationStart = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SemesterName = "Fall"
                        },
                        new
                        {
                            SemesterId = 2,
                            AcademicYear = "2024-2025",
                            IsCurrent = false,
                            RegistrationEnd = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationStart = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SemesterName = "Spring"
                        },
                        new
                        {
                            SemesterId = 3,
                            AcademicYear = "2025-2026",
                            IsCurrent = true,
                            RegistrationEnd = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationStart = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SemesterName = "Fall"
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Student", b =>
                {
                    b.Property<int>("RegistrationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationNumber"));

                    b.Property<int>("AdmissionYear")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("College")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("GPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TotalCreditHours")
                        .HasColumnType("int");

                    b.HasKey("RegistrationNumber");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            RegistrationNumber = 20240001,
                            AdmissionYear = 2024,
                            College = "Engineering",
                            Department = "Computer Science",
                            DepartmentCode = "CS",
                            FullName = "Sameh Shokry",
                            GPA = 3.75m,
                            PasswordHash = "Sameh_2024_0001",
                            Status = "Regular",
                            TotalCreditHours = 45
                        },
                        new
                        {
                            RegistrationNumber = 20240002,
                            AdmissionYear = 2024,
                            College = "Business",
                            Department = "Management",
                            DepartmentCode = "MGT",
                            FullName = "Maria Gabrielle",
                            GPA = 3.20m,
                            PasswordHash = "Maria_2024_0002",
                            Status = "Regular",
                            TotalCreditHours = 45
                        },
                        new
                        {
                            RegistrationNumber = 20240003,
                            AdmissionYear = 2020,
                            College = "Engineering",
                            Department = "Computer Science",
                            DepartmentCode = "CS",
                            FullName = "Ahmed Hassan",
                            GPA = 3.90m,
                            PasswordHash = "Ahmed_2024_0003",
                            Status = "Graduated",
                            TotalCreditHours = 120
                        },
                        new
                        {
                            RegistrationNumber = 20240004,
                            AdmissionYear = 2024,
                            College = "Engineering",
                            Department = "Computer Science",
                            DepartmentCode = "CS",
                            FullName = "Sama Medhat",
                            GPA = 3.45m,
                            PasswordHash = "Sama_2024_0004",
                            Status = "Regular",
                            TotalCreditHours = 30
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.StudentCourseHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Grade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("StudentRegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentRegistrationNumber");

                    b.ToTable("StudentCourseHistory");

                    b.HasData(
                        new
                        {
                            HistoryId = 1,
                            CourseId = 1,
                            Grade = 3.8m,
                            IsCompleted = true,
                            SemesterId = 3,
                            StudentRegistrationNumber = 20240001
                        },
                        new
                        {
                            HistoryId = 2,
                            CourseId = 3,
                            Grade = 3.5m,
                            IsCompleted = true,
                            SemesterId = 3,
                            StudentRegistrationNumber = 20240001
                        },
                        new
                        {
                            HistoryId = 3,
                            CourseId = 5,
                            Grade = 3.2m,
                            IsCompleted = true,
                            SemesterId = 3,
                            StudentRegistrationNumber = 20240001
                        },
                        new
                        {
                            HistoryId = 4,
                            CourseId = 1,
                            Grade = 3.2m,
                            IsCompleted = true,
                            SemesterId = 3,
                            StudentRegistrationNumber = 20240002
                        },
                        new
                        {
                            HistoryId = 5,
                            CourseId = 1,
                            Grade = 3.6m,
                            IsCompleted = true,
                            SemesterId = 3,
                            StudentRegistrationNumber = 20240004
                        });
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Class", b =>
                {
                    b.HasOne("StudentRegistration.Shared.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentRegistration.Shared.Models.Instructor", "Instructor")
                        .WithMany("Classes")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Prerequisite", b =>
                {
                    b.HasOne("StudentRegistration.Shared.Models.Course", "Course")
                        .WithMany("Prerequisites")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentRegistration.Shared.Models.Course", "RequiredCourse")
                        .WithMany()
                        .HasForeignKey("RequiredCourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("RequiredCourse");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Registration", b =>
                {
                    b.HasOne("StudentRegistration.Shared.Models.Class", "Class")
                        .WithMany("Registrations")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentRegistration.Shared.Models.Semester", "Semester")
                        .WithMany("Registrations")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentRegistration.Shared.Models.Student", "Student")
                        .WithMany("Registrations")
                        .HasForeignKey("StudentRegistrationNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.StudentCourseHistory", b =>
                {
                    b.HasOne("StudentRegistration.Shared.Models.Course", "Course")
                        .WithMany("StudentHistory")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentRegistration.Shared.Models.Semester", "Semester")
                        .WithMany("CourseHistory")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentRegistration.Shared.Models.Student", "Student")
                        .WithMany("CourseHistory")
                        .HasForeignKey("StudentRegistrationNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Class", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Course", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Prerequisites");

                    b.Navigation("StudentHistory");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Instructor", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Semester", b =>
                {
                    b.Navigation("CourseHistory");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("StudentRegistration.Shared.Models.Student", b =>
                {
                    b.Navigation("CourseHistory");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
