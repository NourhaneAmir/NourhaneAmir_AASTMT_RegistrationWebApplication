<div class="flex items-center justify-center min-h-[calc(100vh-4rem)] py-8 px-4">
    <div class="max-w-2xl w-full">
        <div class="bg-white rounded-2xl shadow-xl p-8">
            <div class="mb-8">
                <h2 class="text-3xl font-bold text-gray-900 mb-2">Choose From The Following Menu</h2>

                @* @if (RegistrationMessage != "registrationMessage")
                {
                    <div class="mt-4 p-3 bg-yellow-100 border border-yellow-400 text-yellow-700 rounded-lg">
                        @RegistrationMessage
                    </div>
                } *@
                @if (IsCheckingConditions)
                {
                    <div class="mt-4 p-3 bg-blue-100 border border-blue-400 text-blue-700 rounded-lg">
                        <div class="flex items-center">
                            <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2"></div>
                            Checking registration conditions...
                        </div>
                    </div>
                }
            </div>

            <div class="grid grid-cols-2 align-items-center justify-content-center gap-4">
                <img src="logo-blue03.png" alt="University Logo" class="w-full h-auto" />

                <div class="justify-content-between text-sm">
                    <button @onclick="HandleRegistrationClick"
                            disabled="@(IsCheckingConditions)"
                            class="w-full block text-left hover:bg-blue-50 text-black font-semibold py-3 px-4 rounded-lg focus:outline-none transition duration-200
                                   @(IsRegistrationEnabled && !IsCheckingConditions ? "hover:shadow-md cursor-pointer" : "opacity-50 cursor-not-allowed")">
                        <div class="flex items-center justify-between">
                            <span>Online Registration</span>
                            @if (IsCheckingConditions)
                            {
                                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
                            }
                        </div>
                    </button>


                    <button disabled class="w-full block text-left hover:bg-blue-50 text-black font-semibold py-3 px-4 rounded-lg focus:outline-none opacity-50 cursor-not-allowed">
                        Print UnOfficial Transcript
                    </button>

                    <button disabled class="w-full block text-left hover:bg-blue-50 text-black font-semibold py-3 px-4 rounded-lg focus:outline-none opacity-50 cursor-not-allowed">
                        Print UnOfficial Academic Guidance Transcript
                    </button>

                    <button class="w-full block text-left hover:bg-blue-50 text-black font-semibold py-3 px-4 rounded-lg focus:outline-none opacity-50 cursor-not-allowed">
                        Print Schedule
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnRegistrationClick { get; set; }

    [Parameter]
    public bool IsRegistrationEnabled { get; set; }

    [Parameter]
    public string RegistrationMessage { get; set; } = string.Empty;

    private bool IsCheckingConditions { get; set; } = false;

    private async Task HandleRegistrationClick()
    {
        if (IsRegistrationEnabled && !IsCheckingConditions)
        {
            IsCheckingConditions = true;
            StateHasChanged(); 

            await Task.Delay(500);

            await OnRegistrationClick.InvokeAsync();

            IsCheckingConditions = false;
            Console.WriteLine(RegistrationMessage);
            StateHasChanged();
        }
    }
    
}